From f522d023c8c92c947ab3492b40dae5f6c8ef8967 Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Thu, 5 Oct 2023 12:04:00 -0700
Subject: [PATCH 01/14] Add OneXFly. Improve organization.

---
 oxp-sensors.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index e1a907c..f517834 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -45,6 +45,7 @@ enum oxp_board {
 	aya_neo_air,
 	aya_neo_air_pro,
 	aya_neo_geek,
+	oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
 	oxp_mini_amd_pro,
@@ -112,6 +113,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_geek,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER F1"),
+		},
+		.driver_data = (void *)oxp_fly,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
@@ -187,8 +195,9 @@ static int tt_toggle_enable(void)
 		reg = OXP_OLD_TURBO_SWITCH_REG;
 		val = OXP_OLD_TURBO_TAKE_VAL;
 		break;
-	case oxp_mini_amd_pro:
 	case aok_zoe_a1:
+	case oxp_fly:
+	case oxp_mini_amd_pro:
 		reg = OXP_TURBO_SWITCH_REG;
 		val = OXP_TURBO_TAKE_VAL;
 		break;
@@ -208,8 +217,9 @@ static int tt_toggle_disable(void)
 		reg = OXP_OLD_TURBO_SWITCH_REG;
 		val = OXP_OLD_TURBO_RETURN_VAL;
 		break;
-	case oxp_mini_amd_pro:
 	case aok_zoe_a1:
+	case oxp_fly:
+	case oxp_mini_amd_pro:
 		reg = OXP_TURBO_SWITCH_REG;
 		val = OXP_TURBO_RETURN_VAL;
 		break;
@@ -253,8 +263,9 @@ static ssize_t tt_toggle_show(struct device *dev,
 	case oxp_mini_amd_a07:
 		reg = OXP_OLD_TURBO_SWITCH_REG;
 		break;
-	case oxp_mini_amd_pro:
 	case aok_zoe_a1:
+	case oxp_fly:
+	case oxp_mini_amd_pro:
 		reg = OXP_TURBO_SWITCH_REG;
 		break;
 	default:
@@ -324,6 +335,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case oxp_mini_amd_a07:
 				*val = (*val * 255) / 100;
 				break;
+			case oxp_fly:
 			case oxp_mini_amd_pro:
 			case aok_zoe_a1:
 			default:
@@ -366,6 +378,7 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			case oxp_mini_amd_a07:
 				val = (val * 100) / 255;
 				break;
+			case oxp_fly:
 			case aok_zoe_a1:
 			case oxp_mini_amd_pro:
 			default:
-- 
GitLab


From 06480735659c024423b9ab13d767ba23e3bbd18f Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Thu, 5 Oct 2023 12:06:05 -0700
Subject: [PATCH 02/14] Add mnissed cases.

---
 oxp-sensors.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index f517834..f5756d1 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -335,9 +335,9 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case oxp_mini_amd_a07:
 				*val = (*val * 255) / 100;
 				break;
+			case aok_zoe_a1:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
-			case aok_zoe_a1:
 			default:
 				break;
 			}
@@ -378,8 +378,8 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			case oxp_mini_amd_a07:
 				val = (val * 100) / 255;
 				break;
-			case oxp_fly:
 			case aok_zoe_a1:
+			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
 				break;
-- 
GitLab


From c882eaccf676176e37e663ad116090ef7af5903e Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Fri, 20 Oct 2023 14:48:18 -0700
Subject: [PATCH 03/14] Adds support for OXP2 and OXP2 Pro

---
 oxp-sensors.c | 57 +++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 46 insertions(+), 11 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index f5756d1..f49d5e8 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -45,6 +45,8 @@ enum oxp_board {
 	aya_neo_air,
 	aya_neo_air_pro,
 	aya_neo_geek,
+	oxp_2,
+	oxp_2_pro,
 	oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
@@ -59,16 +61,17 @@ static enum oxp_board board;
 #define OXP_SENSOR_PWM_REG		0x4B /* PWM reading is 1 register long */
 
 /* Turbo button takeover function
- * Older boards have different values and EC registers
+ * Different boards have different values and EC registers
  * for the same function
  */
-#define OXP_OLD_TURBO_SWITCH_REG	0x1E
-#define OXP_OLD_TURBO_TAKE_VAL		0x01
-#define OXP_OLD_TURBO_RETURN_VAL	0x00
-
 #define OXP_TURBO_SWITCH_REG		0xF1
 #define OXP_TURBO_TAKE_VAL		0x40
-#define OXP_TURBO_RETURN_VAL		0x00
+#define OXP_TURBO_RETURN_VAL		0x00 /* Common return val */
+
+#define OXP_2_TURBO_SWITCH_REG		0xEB /* OXP2 and OXP2 Pro */
+#define OXP_MINI_TURBO_SWITCH_REG	0x1E /* Mini AO7 */
+#define OXP_MINI_TURBO_TAKE_VAL		0x01
+
 
 static const struct dmi_system_id dmi_table[] = {
 	{
@@ -113,6 +116,20 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_geek,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER 2 ARP23"),
+		},
+		.driver_data = (void *)oxp_2,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER 2 PRO ARP23P"),
+		},
+		.driver_data = (void *)oxp_2_pro,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
@@ -192,8 +209,8 @@ static int tt_toggle_enable(void)
 
 	switch (board) {
 	case oxp_mini_amd_a07:
-		reg = OXP_OLD_TURBO_SWITCH_REG;
-		val = OXP_OLD_TURBO_TAKE_VAL;
+		reg = OXP_MINI_TURBO_SWITCH_REG;
+		val = OXP_MINI_TURBO_TAKE_VAL;
 		break;
 	case aok_zoe_a1:
 	case oxp_fly:
@@ -201,6 +218,11 @@ static int tt_toggle_enable(void)
 		reg = OXP_TURBO_SWITCH_REG;
 		val = OXP_TURBO_TAKE_VAL;
 		break;
+	case oxp_2:
+	case oxp_2_pro:
+		reg = OXP_2_TURBO_SWITCH_REG;
+		val = OXP_TURBO_TAKE_VAL;
+		break;
 	default:
 		return -EINVAL;
 	}
@@ -214,8 +236,8 @@ static int tt_toggle_disable(void)
 
 	switch (board) {
 	case oxp_mini_amd_a07:
-		reg = OXP_OLD_TURBO_SWITCH_REG;
-		val = OXP_OLD_TURBO_RETURN_VAL;
+		reg = OXP_MINI_TURBO_SWITCH_REG;
+		val = OXP_TURBO_RETURN_VAL;
 		break;
 	case aok_zoe_a1:
 	case oxp_fly:
@@ -223,6 +245,11 @@ static int tt_toggle_disable(void)
 		reg = OXP_TURBO_SWITCH_REG;
 		val = OXP_TURBO_RETURN_VAL;
 		break;
+	case oxp_2:
+	case oxp_2_pro:
+		reg = OXP_2_TURBO_SWITCH_REG;
+		val = OXP_TURBO_RETURN_VAL;
+		break;
 	default:
 		return -EINVAL;
 	}
@@ -261,13 +288,17 @@ static ssize_t tt_toggle_show(struct device *dev,
 
 	switch (board) {
 	case oxp_mini_amd_a07:
-		reg = OXP_OLD_TURBO_SWITCH_REG;
+		reg = OXP_MINI_TURBO_SWITCH_REG;
 		break;
 	case aok_zoe_a1:
 	case oxp_fly:
 	case oxp_mini_amd_pro:
 		reg = OXP_TURBO_SWITCH_REG;
 		break;
+	case oxp_2:
+	case oxp_2_pro:
+		reg = OXP_2_TURBO_SWITCH_REG;
+		break;
 	default:
 		return -EINVAL;
 	}
@@ -336,6 +367,8 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 				*val = (*val * 255) / 100;
 				break;
 			case aok_zoe_a1:
+			case oxp_2:
+			case oxp_2_pro:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
@@ -379,6 +412,8 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 				val = (val * 100) / 255;
 				break;
 			case aok_zoe_a1:
+			case oxp_2:
+			case oxp_2_pro:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
-- 
GitLab


From c60a8848edbb6ded4b04e0868d36606808c46daa Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Fri, 20 Oct 2023 21:30:30 -0700
Subject: [PATCH 04/14] Add OXP2 PRO EVANGELION Edition

---
 oxp-sensors.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index f49d5e8..19eb40b 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -130,6 +130,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)oxp_2_pro,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER 2 PRO ARP23P EVA-01"),
+		},
+		.driver_data = (void *)oxp_2_pro,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
-- 
GitLab


From 8b2874d921c2f62b2e050c8aba421d0d438a8152 Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Thu, 26 Oct 2023 18:48:52 -0700
Subject: [PATCH 05/14] Enable tt_toggle for oxp_2 and oxp_fly

---
 oxp-sensors.c | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index 19eb40b..a94416e 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -46,7 +46,6 @@ enum oxp_board {
 	aya_neo_air_pro,
 	aya_neo_geek,
 	oxp_2,
-	oxp_2_pro,
 	oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
@@ -128,14 +127,14 @@ static const struct dmi_system_id dmi_table[] = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
 			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER 2 PRO ARP23P"),
 		},
-		.driver_data = (void *)oxp_2_pro,
+		.driver_data = (void *)oxp_2,
 	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
 			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONEXPLAYER 2 PRO ARP23P EVA-01"),
 		},
-		.driver_data = (void *)oxp_2_pro,
+		.driver_data = (void *)oxp_2,
 	},
 	{
 		.matches = {
@@ -226,7 +225,6 @@ static int tt_toggle_enable(void)
 		val = OXP_TURBO_TAKE_VAL;
 		break;
 	case oxp_2:
-	case oxp_2_pro:
 		reg = OXP_2_TURBO_SWITCH_REG;
 		val = OXP_TURBO_TAKE_VAL;
 		break;
@@ -253,7 +251,6 @@ static int tt_toggle_disable(void)
 		val = OXP_TURBO_RETURN_VAL;
 		break;
 	case oxp_2:
-	case oxp_2_pro:
 		reg = OXP_2_TURBO_SWITCH_REG;
 		val = OXP_TURBO_RETURN_VAL;
 		break;
@@ -303,7 +300,6 @@ static ssize_t tt_toggle_show(struct device *dev,
 		reg = OXP_TURBO_SWITCH_REG;
 		break;
 	case oxp_2:
-	case oxp_2_pro:
 		reg = OXP_2_TURBO_SWITCH_REG;
 		break;
 	default:
@@ -375,7 +371,6 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 				break;
 			case aok_zoe_a1:
 			case oxp_2:
-			case oxp_2_pro:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
@@ -420,7 +415,6 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 				break;
 			case aok_zoe_a1:
 			case oxp_2:
-			case oxp_2_pro:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
@@ -487,6 +481,8 @@ static int oxp_platform_probe(struct platform_device *pdev)
 
 	switch (board) {
 	case aok_zoe_a1:
+	case oxp_2:
+	case oxp_fly:
 	case oxp_mini_amd_a07:
 	case oxp_mini_amd_pro:
 		ret = devm_device_add_groups(dev, oxp_ec_groups);
-- 
GitLab


From 702abbbc98b270cf07fc409f8cd43805f5d599fb Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Sat, 28 Oct 2023 19:16:04 -0700
Subject: [PATCH 06/14] Reorder OXP devices to be alphabetical.

---
 oxp-sensors.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index a94416e..aa520b8 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -115,6 +115,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_geek,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONE XPLAYER"),
+		},
+		.driver_data = (void *)oxp_mini_amd,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
@@ -143,13 +150,6 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)oxp_fly,
 	},
-	{
-		.matches = {
-			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
-			DMI_EXACT_MATCH(DMI_BOARD_NAME, "ONE XPLAYER"),
-		},
-		.driver_data = (void *)oxp_mini_amd,
-	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
-- 
GitLab


From b300f6162aecb7c79b7d7a62ebc07a2bc105211a Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Mon, 18 Mar 2024 20:35:18 -0700
Subject: [PATCH 07/14] Update to latest kernel. Add OrangePi NEO-01

---
 oxp-sensors.c | 194 ++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 148 insertions(+), 46 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index aa520b8..35a879e 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -43,13 +43,16 @@ enum oxp_board {
 	aok_zoe_a1 = 1,
 	aya_neo_2,
 	aya_neo_air,
+	aya_neo_air_plus_mendo,
 	aya_neo_air_pro,
 	aya_neo_geek,
-	oxp_2,
-	oxp_fly,
+	orange_pi_neo_01,
+        oxp_2,
+        oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
 	oxp_mini_amd_pro,
+
 };
 
 static enum oxp_board board;
@@ -58,18 +61,26 @@ static enum oxp_board board;
 #define OXP_SENSOR_FAN_REG		0x76 /* Fan reading is 2 registers long */
 #define OXP_SENSOR_PWM_ENABLE_REG	0x4A /* PWM enable is 1 register long */
 #define OXP_SENSOR_PWM_REG		0x4B /* PWM reading is 1 register long */
+#define OXP_SENSOR_AUTO			0x00 /* Value for fan auto mode */
+#define OXP_SENSOR_MANUAL		0x01 /* Value for fan auto mode */
+
+#define ORANGEPI_SENSOR_FAN_REG		0x78 /* Fan reading is 2 registers long */
+#define ORANGEPI_SENSOR_PWM_ENABLE_REG	0x40 /* PWM enable is 1 register long */
+#define ORANGEPI_SENSOR_PWM_REG		0x38 /* PWM reading is 1 register long */
+#define ORANGEPI_SENSOR_AUTO		0x00 /* Value for fan auto mode */
+#define ORANGEPI_SENSOR_MANUAL		0xAA /* Value for fan auto mode */
 
 /* Turbo button takeover function
  * Different boards have different values and EC registers
  * for the same function
  */
-#define OXP_TURBO_SWITCH_REG		0xF1
-#define OXP_TURBO_TAKE_VAL		0x40
-#define OXP_TURBO_RETURN_VAL		0x00 /* Common return val */
+#define OXP_TURBO_SWITCH_REG            0xF1
+#define OXP_TURBO_TAKE_VAL              0x40
+#define OXP_TURBO_RETURN_VAL            0x00 /* Common return val */
 
-#define OXP_2_TURBO_SWITCH_REG		0xEB /* OXP2 and OXP2 Pro */
-#define OXP_MINI_TURBO_SWITCH_REG	0x1E /* Mini AO7 */
-#define OXP_MINI_TURBO_TAKE_VAL		0x01
+#define OXP_2_TURBO_SWITCH_REG          0xEB /* OXP2 and OXP2 Pro */
+#define OXP_MINI_TURBO_SWITCH_REG       0x1E /* Mini AO7 */
+#define OXP_MINI_TURBO_TAKE_VAL         0x01
 
 
 static const struct dmi_system_id dmi_table[] = {
@@ -101,6 +112,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_air,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "AB05-Mendocino"),
+		},
+		.driver_data = (void *)aya_neo_air_plus_mendo,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
@@ -115,6 +133,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_geek,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "OrangePi"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "NEO-01"),
+		},
+		.driver_data = (void *)orange_pi_neo_01,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "ONE-NETBOOK"),
@@ -254,6 +279,7 @@ static int tt_toggle_disable(void)
 		reg = OXP_2_TURBO_SWITCH_REG;
 		val = OXP_TURBO_RETURN_VAL;
 		break;
+
 	default:
 		return -EINVAL;
 	}
@@ -261,6 +287,22 @@ static int tt_toggle_disable(void)
 }
 
 /* Callbacks for turbo toggle attribute */
+static umode_t tt_toggle_is_visible(struct kobject *kobj,
+				    struct attribute *attr, int n)
+{
+	switch (board) {
+	case aok_zoe_a1:
+	case oxp_2:
+	case oxp_fly:
+	case oxp_mini_amd_a07:
+	case oxp_mini_amd_pro:
+		return attr->mode;
+	default:
+		break;
+	}
+	return 0;
+}
+
 static ssize_t tt_toggle_store(struct device *dev,
 			       struct device_attribute *attr, const char *buf,
 			       size_t count)
@@ -318,12 +360,47 @@ static DEVICE_ATTR_RW(tt_toggle);
 /* PWM enable/disable functions */
 static int oxp_pwm_enable(void)
 {
-	return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, 0x01);
+	switch (board) {
+	case orange_pi_neo_01:
+		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_MANUAL);
+	case aya_neo_2:
+	case aya_neo_air:
+	case aya_neo_air_plus_mendo:
+	case aya_neo_air_pro:
+	case aya_neo_geek:
+	case oxp_mini_amd:
+	case oxp_mini_amd_a07:
+	case aok_zoe_a1:
+	case oxp_2:
+	case oxp_fly:
+	case oxp_mini_amd_pro:
+		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, OXP_SENSOR_MANUAL);
+	default:
+		return -EINVAL;
+	}
+
 }
 
 static int oxp_pwm_disable(void)
 {
-	return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, 0x00);
+	switch (board) {
+	case orange_pi_neo_01:
+		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_AUTO);
+	case aya_neo_2:
+	case aya_neo_air:
+	case aya_neo_air_plus_mendo:
+	case aya_neo_air_pro:
+	case aya_neo_geek:
+	case oxp_mini_amd:
+	case oxp_mini_amd_a07:
+	case aok_zoe_a1:
+	case oxp_2:
+	case oxp_fly:
+	case oxp_mini_amd_pro:
+		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, OXP_SENSOR_AUTO);
+	default:
+		return -EINVAL;
+	}
 }
 
 /* Callbacks for hwmon interface */
@@ -357,16 +434,22 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 	case hwmon_pwm:
 		switch (attr) {
 		case hwmon_pwm_input:
-			ret = read_from_ec(OXP_SENSOR_PWM_REG, 1, val);
-			if (ret)
-				return ret;
 			switch (board) {
+			case orange_pi_neo_01:
+				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
+				if (ret)
+					return ret;
+				break;
 			case aya_neo_2:
 			case aya_neo_air:
+			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
+				ret = read_from_ec(OXP_SENSOR_PWM_REG, 1, val);
+				if (ret)
+					return ret;
 				*val = (*val * 255) / 100;
 				break;
 			case aok_zoe_a1:
@@ -374,11 +457,32 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case oxp_fly:
 			case oxp_mini_amd_pro:
 			default:
+				ret = read_from_ec(OXP_SENSOR_PWM_REG, 1, val);
+				if (ret)
+					return ret;
 				break;
 			}
 			return 0;
 		case hwmon_pwm_enable:
-			return read_from_ec(OXP_SENSOR_PWM_ENABLE_REG, 1, val);
+			switch (board) {
+			case orange_pi_neo_01:
+				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
+			case aok_zoe_a1:
+			case aya_neo_2:
+			case aya_neo_air:
+			case aya_neo_air_plus_mendo:
+			case aya_neo_air_pro:
+			case aya_neo_geek:
+			case oxp_mini_amd:
+			case oxp_mini_amd_a07:
+			case oxp_2:
+			case oxp_fly:
+			case oxp_mini_amd_pro:
+				return read_from_ec(OXP_SENSOR_PWM_ENABLE_REG, 1, val);
+			default:
+				break;
+			}
+
 		default:
 			break;
 		}
@@ -405,22 +509,25 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			if (val < 0 || val > 255)
 				return -EINVAL;
 			switch (board) {
+			case orange_pi_neo_01:
+				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case aya_neo_2:
 			case aya_neo_air:
+			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 				val = (val * 100) / 255;
-				break;
+				return write_to_ec(OXP_SENSOR_PWM_REG, val);
 			case aok_zoe_a1:
 			case oxp_2:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
+				return write_to_ec(OXP_SENSOR_PWM_REG, val);
 			default:
 				break;
 			}
-			return write_to_ec(OXP_SENSOR_PWM_REG, val);
 		default:
 			break;
 		}
@@ -445,7 +552,15 @@ static struct attribute *oxp_ec_attrs[] = {
 	NULL
 };
 
-ATTRIBUTE_GROUPS(oxp_ec);
+static struct attribute_group oxp_ec_attribute_group = {
+	.is_visible = tt_toggle_is_visible,
+	.attrs = oxp_ec_attrs,
+};
+
+static const struct attribute_group *oxp_ec_groups[] = {
+	&oxp_ec_attribute_group,
+	NULL
+};
 
 static const struct hwmon_ops oxp_ec_hwmon_ops = {
 	.is_visible = oxp_ec_hwmon_is_visible,
@@ -461,37 +576,8 @@ static const struct hwmon_chip_info oxp_ec_chip_info = {
 /* Initialization logic */
 static int oxp_platform_probe(struct platform_device *pdev)
 {
-	const struct dmi_system_id *dmi_entry;
 	struct device *dev = &pdev->dev;
 	struct device *hwdev;
-	int ret;
-
-	/*
-	 * Have to check for AMD processor here because DMI strings are the
-	 * same between Intel and AMD boards, the only way to tell them apart
-	 * is the CPU.
-	 * Intel boards seem to have different EC registers and values to
-	 * read/write.
-	 */
-	dmi_entry = dmi_first_match(dmi_table);
-	if (!dmi_entry || boot_cpu_data.x86_vendor != X86_VENDOR_AMD)
-		return -ENODEV;
-
-	board = (enum oxp_board)(unsigned long)dmi_entry->driver_data;
-
-	switch (board) {
-	case aok_zoe_a1:
-	case oxp_2:
-	case oxp_fly:
-	case oxp_mini_amd_a07:
-	case oxp_mini_amd_pro:
-		ret = devm_device_add_groups(dev, oxp_ec_groups);
-		if (ret)
-			return ret;
-		break;
-	default:
-		break;
-	}
 
 	hwdev = devm_hwmon_device_register_with_info(dev, "oxpec", NULL,
 						     &oxp_ec_chip_info, NULL);
@@ -502,6 +588,7 @@ static int oxp_platform_probe(struct platform_device *pdev)
 static struct platform_driver oxp_platform_driver = {
 	.driver = {
 		.name = "oxp-platform",
+		.dev_groups = oxp_ec_groups,
 	},
 	.probe = oxp_platform_probe,
 };
@@ -510,6 +597,21 @@ static struct platform_device *oxp_platform_device;
 
 static int __init oxp_platform_init(void)
 {
+	const struct dmi_system_id *dmi_entry;
+
+	/*
+	 * Have to check for AMD processor here because DMI strings are the
+	 * same between Intel and AMD boards, the only way to tell them apart
+	 * is the CPU.
+	 * Intel boards seem to have different EC registers and values to
+	 * read/write.
+	 */
+	dmi_entry = dmi_first_match(dmi_table);
+	if (!dmi_entry || boot_cpu_data.x86_vendor != X86_VENDOR_AMD)
+		return -ENODEV;
+
+	board = (enum oxp_board)(unsigned long)dmi_entry->driver_data;
+
 	oxp_platform_device =
 		platform_create_bundle(&oxp_platform_driver,
 				       oxp_platform_probe, NULL, 0, NULL, 0);
-- 
GitLab


From 8791845ec5f9532c542698386ecc7249c5bdb960 Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Tue, 19 Mar 2024 12:02:36 -0700
Subject: [PATCH 08/14] Add missing cases

---
 oxp-sensors.c | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index 35a879e..e78762d 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -426,7 +426,25 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 	case hwmon_fan:
 		switch (attr) {
 		case hwmon_fan_input:
-			return read_from_ec(OXP_SENSOR_FAN_REG, 2, val);
+			switch (board) {
+			case orange_pi_neo_01:
+				return read_from_ec(ORANGEPI_SENSOR_FAN_REG, 2, val);
+			case aya_neo_2:
+			case aya_neo_air:
+			case aya_neo_air_plus_mendo:
+			case aya_neo_air_pro:
+			case aya_neo_geek:
+			case oxp_mini_amd:
+			case oxp_mini_amd_a07:
+			case aok_zoe_a1:
+			case oxp_2:
+			case oxp_fly:
+			case oxp_mini_amd_pro:
+				return read_from_ec(OXP_SENSOR_FAN_REG, 2, val);
+			default:
+				break;
+			}
+
 		default:
 			break;
 		}
@@ -466,7 +484,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		case hwmon_pwm_enable:
 			switch (board) {
 			case orange_pi_neo_01:
-				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
+				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val) == ORANGEPI_SENSOR_MANUAL;
 			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_air:
-- 
GitLab


From ecacf712a3f3837319f69464b4a993e3b5c5002a Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Tue, 19 Mar 2024 12:23:26 -0700
Subject: [PATCH 09/14] Fix OrangePi comparison

---
 oxp-sensors.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index e78762d..e9d9a61 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -484,7 +484,9 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		case hwmon_pwm_enable:
 			switch (board) {
 			case orange_pi_neo_01:
-				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val) == ORANGEPI_SENSOR_MANUAL;
+				ret = read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
+				*val = (*val == ORANGEPI_SENSOR_MANUAL);
+				return ret;
 			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_air:
-- 
GitLab


From 65b142a3694489bef07f4aa96bb2eeba408b851d Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Tue, 19 Mar 2024 14:36:18 -0700
Subject: [PATCH 10/14] Add missing AYANEO devices

---
 oxp-sensors.c | 98 ++++++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 85 insertions(+), 13 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index e9d9a61..6e37e60 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -42,13 +42,21 @@ static bool unlock_global_acpi_lock(void)
 enum oxp_board {
 	aok_zoe_a1 = 1,
 	aya_neo_2,
+	aya_neo_2s,
 	aya_neo_air,
+	aya_neo_air_1s,
+	aya_neo_air_plus_amd,
 	aya_neo_air_plus_mendo,
 	aya_neo_air_pro,
 	aya_neo_geek,
+	aya_neo_geek_1s,
+	aya_neo_next,
+	aya_neo_next_advance,
+	aya_neo_next_lite,
+	aya_neo_next_pro,
 	orange_pi_neo_01,
-        oxp_2,
-        oxp_fly,
+	oxp_2,
+	oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
 	oxp_mini_amd_pro,
@@ -58,17 +66,17 @@ enum oxp_board {
 static enum oxp_board board;
 
 /* Fan reading and PWM */
-#define OXP_SENSOR_FAN_REG		0x76 /* Fan reading is 2 registers long */
-#define OXP_SENSOR_PWM_ENABLE_REG	0x4A /* PWM enable is 1 register long */
-#define OXP_SENSOR_PWM_REG		0x4B /* PWM reading is 1 register long */
-#define OXP_SENSOR_AUTO			0x00 /* Value for fan auto mode */
-#define OXP_SENSOR_MANUAL		0x01 /* Value for fan auto mode */
-
-#define ORANGEPI_SENSOR_FAN_REG		0x78 /* Fan reading is 2 registers long */
-#define ORANGEPI_SENSOR_PWM_ENABLE_REG	0x40 /* PWM enable is 1 register long */
-#define ORANGEPI_SENSOR_PWM_REG		0x38 /* PWM reading is 1 register long */
-#define ORANGEPI_SENSOR_AUTO		0x00 /* Value for fan auto mode */
-#define ORANGEPI_SENSOR_MANUAL		0xAA /* Value for fan auto mode */
+#define OXP_SENSOR_FAN_REG              0x76 /* Fan reading is 2 registers long */
+#define OXP_SENSOR_PWM_ENABLE_REG       0x4A /* PWM enable is 1 register long */
+#define OXP_SENSOR_PWM_REG              0x4B /* PWM reading is 1 register long */
+#define OXP_SENSOR_AUTO                 0x00 /* Value for fan auto mode */
+#define OXP_SENSOR_MANUAL               0x01 /* Value for fan auto mode */
+
+#define ORANGEPI_SENSOR_FAN_REG         0x78 /* Fan reading is 2 registers long */
+#define ORANGEPI_SENSOR_PWM_ENABLE_REG  0x40 /* PWM enable is 1 register long */
+#define ORANGEPI_SENSOR_PWM_REG         0x38 /* PWM reading is 1 register long */
+#define ORANGEPI_SENSOR_AUTO            0x00 /* Value for fan auto mode */
+#define ORANGEPI_SENSOR_MANUAL          0xAA /* Value for fan auto mode */
 
 /* Turbo button takeover function
  * Different boards have different values and EC registers
@@ -105,6 +113,13 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_2,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "AYANEO 2S"),
+		},
+		.driver_data = (void *)aya_neo_2s,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
@@ -112,6 +127,20 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_air,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "AIR 1S"),
+		},
+		.driver_data = (void *)aya_neo_air_1s,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "AB05-AMD"),
+		},
+		.driver_data = (void *)aya_neo_air_plus_amd,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
@@ -133,6 +162,20 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_geek,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "GEEK 1S"),
+		},
+		.driver_data = (void *)aya_neo_geek_1s,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "NEXT Lite"),
+		},
+		.driver_data = (void *)aya_neo_next_lite,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "OrangePi"),
@@ -364,10 +407,14 @@ static int oxp_pwm_enable(void)
 	case orange_pi_neo_01:
 		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_MANUAL);
 	case aya_neo_2:
+	case aya_neo_2s:
 	case aya_neo_air:
+	case aya_neo_air_plus_amd:
 	case aya_neo_air_plus_mendo:
 	case aya_neo_air_pro:
 	case aya_neo_geek:
+	case aya_neo_geek_1s:
+	case aya_neo_next_lite:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
 	case aok_zoe_a1:
@@ -387,10 +434,15 @@ static int oxp_pwm_disable(void)
 	case orange_pi_neo_01:
 		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_AUTO);
 	case aya_neo_2:
+	case aya_neo_2s:
 	case aya_neo_air:
+	case aya_neo_air_1s:
+	case aya_neo_air_plus_amd:
 	case aya_neo_air_plus_mendo:
 	case aya_neo_air_pro:
 	case aya_neo_geek:
+	case aya_neo_geek_1s:
+	case aya_neo_next_lite:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
 	case aok_zoe_a1:
@@ -430,10 +482,15 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case orange_pi_neo_01:
 				return read_from_ec(ORANGEPI_SENSOR_FAN_REG, 2, val);
 			case aya_neo_2:
+			case aya_neo_2s:
 			case aya_neo_air:
+			case aya_neo_air_1s:
+			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
+			case aya_neo_geek_1s:
+			case aya_neo_next_lite:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 			case aok_zoe_a1:
@@ -459,10 +516,15 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 					return ret;
 				break;
 			case aya_neo_2:
+			case aya_neo_2s:
 			case aya_neo_air:
+			case aya_neo_air_1s:
+			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
+			case aya_neo_geek_1s:
+			case aya_neo_next_lite:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 				ret = read_from_ec(OXP_SENSOR_PWM_REG, 1, val);
@@ -489,10 +551,15 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 				return ret;
 			case aok_zoe_a1:
 			case aya_neo_2:
+			case aya_neo_2s:
 			case aya_neo_air:
+			case aya_neo_air_1s:
+			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
+			case aya_neo_geek_1s:
+			case aya_neo_next_lite:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 			case oxp_2:
@@ -532,10 +599,15 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			case orange_pi_neo_01:
 				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case aya_neo_2:
+			case aya_neo_2s:
 			case aya_neo_air:
+			case aya_neo_air_1s:
+			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
+			case aya_neo_geek_1s:
+			case aya_neo_next_lite:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 				val = (val * 100) / 255;
-- 
GitLab


From b23584d51d460ec24e343dd137647228e424744f Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Tue, 19 Mar 2024 14:53:22 -0700
Subject: [PATCH 11/14] Add missing AYANEO devices

---
 oxp-sensors.c | 21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index 6e37e60..1bb8eb9 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -50,10 +50,7 @@ enum oxp_board {
 	aya_neo_air_pro,
 	aya_neo_geek,
 	aya_neo_geek_1s,
-	aya_neo_next,
-	aya_neo_next_advance,
-	aya_neo_next_lite,
-	aya_neo_next_pro,
+	aya_neo_kun,
 	orange_pi_neo_01,
 	oxp_2,
 	oxp_fly,
@@ -172,9 +169,9 @@ static const struct dmi_system_id dmi_table[] = {
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
-			DMI_EXACT_MATCH(DMI_BOARD_NAME, "NEXT Lite"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "KUN"),
 		},
-		.driver_data = (void *)aya_neo_next_lite,
+		.driver_data = (void *)aya_neo_kun,
 	},
 	{
 		.matches = {
@@ -414,7 +411,7 @@ static int oxp_pwm_enable(void)
 	case aya_neo_air_pro:
 	case aya_neo_geek:
 	case aya_neo_geek_1s:
-	case aya_neo_next_lite:
+	case aya_neo_kun:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
 	case aok_zoe_a1:
@@ -442,7 +439,7 @@ static int oxp_pwm_disable(void)
 	case aya_neo_air_pro:
 	case aya_neo_geek:
 	case aya_neo_geek_1s:
-	case aya_neo_next_lite:
+	case aya_neo_kun:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
 	case aok_zoe_a1:
@@ -490,7 +487,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case aya_neo_geek_1s:
-			case aya_neo_next_lite:
+			case aya_neo_kun:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 			case aok_zoe_a1:
@@ -524,7 +521,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case aya_neo_geek_1s:
-			case aya_neo_next_lite:
+			case aya_neo_kun:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 				ret = read_from_ec(OXP_SENSOR_PWM_REG, 1, val);
@@ -559,7 +556,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case aya_neo_geek_1s:
-			case aya_neo_next_lite:
+			case aya_neo_kun:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 			case oxp_2:
@@ -607,7 +604,7 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_air_pro:
 			case aya_neo_geek:
 			case aya_neo_geek_1s:
-			case aya_neo_next_lite:
+			case aya_neo_kun:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
 				val = (val * 100) / 255;
-- 
GitLab


From 3bbb558806fd5e18737a55946bbfaedb0adf64b7 Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Fri, 22 Mar 2024 15:49:15 -0700
Subject: [PATCH 12/14] Update to new EC method for OrangePi. Remove AYANEO AIR
 Plus.

---
 oxp-sensors.c | 57 ++++++++++++++++-----------------------------------
 1 file changed, 18 insertions(+), 39 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index 1bb8eb9..ee1bba4 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -45,19 +45,17 @@ enum oxp_board {
 	aya_neo_2s,
 	aya_neo_air,
 	aya_neo_air_1s,
-	aya_neo_air_plus_amd,
 	aya_neo_air_plus_mendo,
 	aya_neo_air_pro,
 	aya_neo_geek,
 	aya_neo_geek_1s,
 	aya_neo_kun,
-	orange_pi_neo_01,
+	orange_pi_neo,
 	oxp_2,
 	oxp_fly,
 	oxp_mini_amd,
 	oxp_mini_amd_a07,
 	oxp_mini_amd_pro,
-
 };
 
 static enum oxp_board board;
@@ -66,15 +64,13 @@ static enum oxp_board board;
 #define OXP_SENSOR_FAN_REG              0x76 /* Fan reading is 2 registers long */
 #define OXP_SENSOR_PWM_ENABLE_REG       0x4A /* PWM enable is 1 register long */
 #define OXP_SENSOR_PWM_REG              0x4B /* PWM reading is 1 register long */
-#define OXP_SENSOR_AUTO                 0x00 /* Value for fan auto mode */
-#define OXP_SENSOR_MANUAL               0x01 /* Value for fan auto mode */
 
 #define ORANGEPI_SENSOR_FAN_REG         0x78 /* Fan reading is 2 registers long */
 #define ORANGEPI_SENSOR_PWM_ENABLE_REG  0x40 /* PWM enable is 1 register long */
 #define ORANGEPI_SENSOR_PWM_REG         0x38 /* PWM reading is 1 register long */
-#define ORANGEPI_SENSOR_AUTO            0x00 /* Value for fan auto mode */
-#define ORANGEPI_SENSOR_MANUAL          0xAA /* Value for fan auto mode */
 
+#define PWM_MODE_AUTO                   0x00 /* Value for fan auto mode */
+#define PWM_MODE_MANUAL                 0x01 /* Value for fan auto mode */
 /* Turbo button takeover function
  * Different boards have different values and EC registers
  * for the same function
@@ -87,7 +83,6 @@ static enum oxp_board board;
 #define OXP_MINI_TURBO_SWITCH_REG       0x1E /* Mini AO7 */
 #define OXP_MINI_TURBO_TAKE_VAL         0x01
 
-
 static const struct dmi_system_id dmi_table[] = {
 	{
 		.matches = {
@@ -131,13 +126,6 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_air_1s,
 	},
-	{
-		.matches = {
-			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
-			DMI_EXACT_MATCH(DMI_BOARD_NAME, "AB05-AMD"),
-		},
-		.driver_data = (void *)aya_neo_air_plus_amd,
-	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "AYANEO"),
@@ -178,7 +166,7 @@ static const struct dmi_system_id dmi_table[] = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "OrangePi"),
 			DMI_EXACT_MATCH(DMI_BOARD_NAME, "NEO-01"),
 		},
-		.driver_data = (void *)orange_pi_neo_01,
+		.driver_data = (void *)orange_pi_neo,
 	},
 	{
 		.matches = {
@@ -319,7 +307,6 @@ static int tt_toggle_disable(void)
 		reg = OXP_2_TURBO_SWITCH_REG;
 		val = OXP_TURBO_RETURN_VAL;
 		break;
-
 	default:
 		return -EINVAL;
 	}
@@ -401,12 +388,12 @@ static DEVICE_ATTR_RW(tt_toggle);
 static int oxp_pwm_enable(void)
 {
 	switch (board) {
-	case orange_pi_neo_01:
-		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_MANUAL);
+	case orange_pi_neo:
+		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, PWM_MODE_MANUAL);
+	case aok_zoe_a1:
 	case aya_neo_2:
 	case aya_neo_2s:
 	case aya_neo_air:
-	case aya_neo_air_plus_amd:
 	case aya_neo_air_plus_mendo:
 	case aya_neo_air_pro:
 	case aya_neo_geek:
@@ -414,11 +401,10 @@ static int oxp_pwm_enable(void)
 	case aya_neo_kun:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
-	case aok_zoe_a1:
 	case oxp_2:
 	case oxp_fly:
 	case oxp_mini_amd_pro:
-		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, OXP_SENSOR_MANUAL);
+		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, PWM_MODE_MANUAL);
 	default:
 		return -EINVAL;
 	}
@@ -428,13 +414,13 @@ static int oxp_pwm_enable(void)
 static int oxp_pwm_disable(void)
 {
 	switch (board) {
-	case orange_pi_neo_01:
-		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, ORANGEPI_SENSOR_AUTO);
+	case orange_pi_neo:
+		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, PWM_MODE_AUTO);
+	case aok_zoe_a1:
 	case aya_neo_2:
 	case aya_neo_2s:
 	case aya_neo_air:
 	case aya_neo_air_1s:
-	case aya_neo_air_plus_amd:
 	case aya_neo_air_plus_mendo:
 	case aya_neo_air_pro:
 	case aya_neo_geek:
@@ -442,11 +428,10 @@ static int oxp_pwm_disable(void)
 	case aya_neo_kun:
 	case oxp_mini_amd:
 	case oxp_mini_amd_a07:
-	case aok_zoe_a1:
 	case oxp_2:
 	case oxp_fly:
 	case oxp_mini_amd_pro:
-		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, OXP_SENSOR_AUTO);
+		return write_to_ec(OXP_SENSOR_PWM_ENABLE_REG, PWM_MODE_AUTO);
 	default:
 		return -EINVAL;
 	}
@@ -476,13 +461,13 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		switch (attr) {
 		case hwmon_fan_input:
 			switch (board) {
-			case orange_pi_neo_01:
+			case orange_pi_neo:
 				return read_from_ec(ORANGEPI_SENSOR_FAN_REG, 2, val);
+			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_2s:
 			case aya_neo_air:
 			case aya_neo_air_1s:
-			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
@@ -490,7 +475,6 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_kun:
 			case oxp_mini_amd:
 			case oxp_mini_amd_a07:
-			case aok_zoe_a1:
 			case oxp_2:
 			case oxp_fly:
 			case oxp_mini_amd_pro:
@@ -507,7 +491,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		switch (attr) {
 		case hwmon_pwm_input:
 			switch (board) {
-			case orange_pi_neo_01:
+			case orange_pi_neo:
 				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
 				if (ret)
 					return ret;
@@ -516,7 +500,6 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case aya_neo_2s:
 			case aya_neo_air:
 			case aya_neo_air_1s:
-			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
@@ -542,16 +525,13 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			return 0;
 		case hwmon_pwm_enable:
 			switch (board) {
-			case orange_pi_neo_01:
-				ret = read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
-				*val = (*val == ORANGEPI_SENSOR_MANUAL);
-				return ret;
+			case orange_pi_neo:
+				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
 			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_2s:
 			case aya_neo_air:
 			case aya_neo_air_1s:
-			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
@@ -593,13 +573,12 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			if (val < 0 || val > 255)
 				return -EINVAL;
 			switch (board) {
-			case orange_pi_neo_01:
+			case orange_pi_neo:
 				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case aya_neo_2:
 			case aya_neo_2s:
 			case aya_neo_air:
 			case aya_neo_air_1s:
-			case aya_neo_air_plus_amd:
 			case aya_neo_air_plus_mendo:
 			case aya_neo_air_pro:
 			case aya_neo_geek:
-- 
GitLab


From c188aeb61216f4cd8a20b4b1b42424f732da6efb Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Fri, 22 Mar 2024 16:47:25 -0700
Subject: [PATCH 13/14] Add GPD devices.

---
 oxp-sensors.c | 82 +++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 82 insertions(+)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index ee1bba4..5fcf2f2 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -50,6 +50,10 @@ enum oxp_board {
 	aya_neo_geek,
 	aya_neo_geek_1s,
 	aya_neo_kun,
+	gpd_win_3,
+	gpd_win_4,
+	gpd_win_max_2,
+	gpd_win_mini,
 	orange_pi_neo,
 	oxp_2,
 	oxp_fly,
@@ -69,8 +73,18 @@ static enum oxp_board board;
 #define ORANGEPI_SENSOR_PWM_ENABLE_REG  0x40 /* PWM enable is 1 register long */
 #define ORANGEPI_SENSOR_PWM_REG         0x38 /* PWM reading is 1 register long */
 
+/* GPD Win Mini doesn't have a separate enable register for the
+ * fan. For the PWM register, 0 is auto, 1-244 is a manual value, and
+ * 245-255 are undefined. This driver will scale to 0-255, and treat
+ * PWM enable without a value as "set to manual, 70%." It uses the same fan
+ * register as the OrangePi NEO.
+ */
+#define GPD_SENSOR_PWM_REG              0x7A /* PWM reading is 1 register long */
+
 #define PWM_MODE_AUTO                   0x00 /* Value for fan auto mode */
 #define PWM_MODE_MANUAL                 0x01 /* Value for fan auto mode */
+#define GPD_PWM_MODE_MANUAL             0xAA /* Value for fan manual mode -- 70% */
+
 /* Turbo button takeover function
  * Different boards have different values and EC registers
  * for the same function
@@ -161,6 +175,34 @@ static const struct dmi_system_id dmi_table[] = {
 		},
 		.driver_data = (void *)aya_neo_kun,
 	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "GPD"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "G1618-03"),
+		},
+		.driver_data = (void *)gpd_win_3,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "GPD"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "G1618-04"),
+		},
+		.driver_data = (void *)gpd_win_4,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "GPD"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "G1619-04"),
+		},
+		.driver_data = (void *)gpd_win_max_2,
+	},
+	{
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "GPD"),
+			DMI_EXACT_MATCH(DMI_BOARD_NAME, "G1617-01"),
+		},
+		.driver_data = (void *)gpd_win_mini,
+	},
 	{
 		.matches = {
 			DMI_MATCH(DMI_BOARD_VENDOR, "OrangePi"),
@@ -388,6 +430,14 @@ static DEVICE_ATTR_RW(tt_toggle);
 static int oxp_pwm_enable(void)
 {
 	switch (board) {
+	case gpd_win_3:
+	case gpd_win_4:
+	case gpd_win_max_2:
+	case gpd_win_mini:
+		/* GPD has no separate enable register, instead, set the fan to
+		 * a safe default.
+		 */
+		return write_to_ec(GPD_SENSOR_PWM_REG, GPD_PWM_MODE_MANUAL);
 	case orange_pi_neo:
 		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, PWM_MODE_MANUAL);
 	case aok_zoe_a1:
@@ -414,6 +464,11 @@ static int oxp_pwm_enable(void)
 static int oxp_pwm_disable(void)
 {
 	switch (board) {
+	case gpd_win_3:
+	case gpd_win_4:
+	case gpd_win_max_2:
+	case gpd_win_mini:
+		return write_to_ec(GPD_SENSOR_PWM_REG, PWM_MODE_AUTO);
 	case orange_pi_neo:
 		return write_to_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, PWM_MODE_AUTO);
 	case aok_zoe_a1:
@@ -461,6 +516,10 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		switch (attr) {
 		case hwmon_fan_input:
 			switch (board) {
+			case gpd_win_3:
+			case gpd_win_4:
+			case gpd_win_max_2:
+			case gpd_win_mini:
 			case orange_pi_neo:
 				return read_from_ec(ORANGEPI_SENSOR_FAN_REG, 2, val);
 			case aok_zoe_a1:
@@ -491,6 +550,16 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 		switch (attr) {
 		case hwmon_pwm_input:
 			switch (board) {
+			case gpd_win_3:
+			case gpd_win_4:
+			case gpd_win_max_2:
+			case gpd_win_mini:
+				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
+				if (ret)
+					return ret;
+				if (*val != PWM_MODE_AUTO)
+					*val = ((*val - 1) * 255) / 243;
+				break;
 			case orange_pi_neo:
 				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
 				if (ret)
@@ -527,6 +596,13 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			switch (board) {
 			case orange_pi_neo:
 				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
+			case gpd_win_3:
+			case gpd_win_4:
+			case gpd_win_max_2:
+			case gpd_win_mini:
+				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
+				*val = (*val != PWM_MODE_AUTO);
+				return ret;
 			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_2s:
@@ -573,6 +649,12 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			if (val < 0 || val > 255)
 				return -EINVAL;
 			switch (board) {
+			case gpd_win_3:
+			case gpd_win_4:
+			case gpd_win_max_2:
+			case gpd_win_mini:
+				val = (val * 243) / 255 + 1;
+				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case orange_pi_neo:
 				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case aya_neo_2:
-- 
GitLab


From fd313c57d945f7a1136610de7b0c11cad143b650 Mon Sep 17 00:00:00 2001
From: "Derek J. Clark" <derekjohn.clark@gmail.com>
Date: Fri, 22 Mar 2024 18:53:32 -0700
Subject: [PATCH 14/14] Fix GPD pwm register.

---
 oxp-sensors.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/hwmon/oxp-sensors.c b/drivers/hwmon/oxp-sensors.c
index 5fcf2f2..32c72b9 100644
--- a/drivers/hwmon/oxp-sensors.c
+++ b/drivers/hwmon/oxp-sensors.c
@@ -554,7 +554,7 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			case gpd_win_4:
 			case gpd_win_max_2:
 			case gpd_win_mini:
-				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
+				ret = read_from_ec(GPD_SENSOR_PWM_REG, 1, val);
 				if (ret)
 					return ret;
 				if (*val != PWM_MODE_AUTO)
@@ -594,15 +594,15 @@ static int oxp_platform_read(struct device *dev, enum hwmon_sensor_types type,
 			return 0;
 		case hwmon_pwm_enable:
 			switch (board) {
-			case orange_pi_neo:
-				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
 			case gpd_win_3:
 			case gpd_win_4:
 			case gpd_win_max_2:
 			case gpd_win_mini:
-				ret = read_from_ec(ORANGEPI_SENSOR_PWM_REG, 1, val);
+				ret = read_from_ec(GPD_SENSOR_PWM_REG, 1, val);
 				*val = (*val != PWM_MODE_AUTO);
 				return ret;
+			case orange_pi_neo:
+				return read_from_ec(ORANGEPI_SENSOR_PWM_ENABLE_REG, 1, val);
 			case aok_zoe_a1:
 			case aya_neo_2:
 			case aya_neo_2s:
@@ -654,7 +654,7 @@ static int oxp_platform_write(struct device *dev, enum hwmon_sensor_types type,
 			case gpd_win_max_2:
 			case gpd_win_mini:
 				val = (val * 243) / 255 + 1;
-				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
+				return write_to_ec(GPD_SENSOR_PWM_REG, val);
 			case orange_pi_neo:
 				return write_to_ec(ORANGEPI_SENSOR_PWM_REG, val);
 			case aya_neo_2:
-- 
GitLab

